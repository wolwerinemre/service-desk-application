swagger: "2.0"
info:
  description: "This is a sample specification for ticket service"
  version: "1.0.0"
  title: "Ticket Service"
basePath: "/api"
tags:
- name: "ticket"
paths:
  /ticket/{ticketNumber}:
    get:
      tags:
      - "ticket"
      summary: "Gets a list of tickets"
      description: "Get All Ticket List"
      operationId: "getByTicketNumber"
      consumes:
      - "*/*"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "ticketNumber"
        description: "Given ticketNumber"
        required: true
        type: "string"
      responses:
        200:
          schema:
            $ref: "TicketDTO"
          description: "List of all users"
  /ticket:
    get:
      tags:
      - "ticket"
      summary: "Gets a list of tickets"
      description: "Get All Ticket List"
      operationId: "getAllList"
      consumes:
      - "*/*"
      produces:
      - "application/json"
      responses:
        200:
          schema:
            type: "array"
            items:
              $ref: "TicketDTO"
          description: "List of all users"
    post:
      tags:
      - "ticket"
      summary: "Creates a new ticket"
      operationId: "save"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ticket"
        description: "The ticket data"
        required: true
        schema:
          $ref: "TicketDTO"
      responses:
        200:
          description: "Ticket successfully created"
          schema:
            $ref: "TicketDTO"
        400:
          description: "Validation error"
    put:
      tags:
      - "ticket"
      summary: "Update a ticket"
      operationId: "update"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ticket"
        description: "The ticket data"
        required: true
        schema:
          $ref: "TicketDTO"
      responses:
        200:
          description: "Ticket successfully updated"
          schema:
            $ref: "TicketDTO"
        400:
          description: "Validation error"
    delete:
      tags:
      - "ticket"
      summary: "Delete a ticket"
      operationId: "delete"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ticket"
        description: "The ticket data"
        required: true
        schema:
          $ref: "TicketDTO"
      responses:
        200:
          description: "Ticket successfully deleted"
          schema:
            type: "boolean"
        400:
          description: "Validation error"