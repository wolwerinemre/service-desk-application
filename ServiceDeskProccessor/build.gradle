description 'Service Desk Proccessor Module'

import io.swagger.codegen.config.CodegenConfigurator
import io.swagger.codegen.DefaultGenerator

def swaggerSourceFile = 'restApi.yaml'
def swaggerTargetFolder = 'src/main/java'

task generateApi {
	doLast {
		if(file('restApi.yaml').exists()) {
			def config = new CodegenConfigurator()
			config.setInputSpec("file:///$projectDir/$swaggerSourceFile")
			config.setOutputDir("$projectDir")
			config.setLang('spring')
			config.setAdditionalProperties([
					'interfaceOnly' : 'true',
					'apiPackage'    : 'com.simple.serviceDeskApplication.controller',
					'modelPackage'  : 'com.simple.serviceDeskApplication.model',
					'sourceFolder'  : swaggerTargetFolder
					
			])

			new DefaultGenerator().opts(config.toClientOptInput()).generate()
		}
	}
}
dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-data-rest"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-undertow"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.flywaydb:flyway-core"
	implementation "org.projectlombok:lombok"
	implementation "com.github.dozermapper:dozer-spring-boot-starter"
	implementation "io.springfox:springfox-swagger2"
	implementation "io.springfox:springfox-swagger-ui"
	runtimeOnly "com.h2database:h2"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
}